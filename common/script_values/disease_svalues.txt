pop_yearly_food_consumption_svalue = {
	add = {
		value = num_of_nobles
		multiply = -6
	}
	add = {
		value = num_of_citizen
		multiply = -3.6
	}
	add = {
		value = num_of_freemen
		multiply = -2.4
	}
	add = {
		value = num_of_slaves
		multiply = -1.2
	}
	add = {
		value = num_of_tribesmen
		multiply = -1.2
	}
}

pops_sanitation_impact_svalue = {
	value = total_population
	multiply = -0.25 # every X percent pop reduces sanitation
	#round = ceiling
}

pops_food_consumption_disease_svalue = {
	value = state.has_state_food
	add = {
		value = pop_yearly_food_consumption_svalue # negative value
		multiply = 2 # amount of years
	}
	# so that food isn't too strong; to be refined
	min = -10 # immune system gets way weaker than what the maximum benefits are
	max = 5
}

disease_aqueduct_num_svalue = {
	value = 0
	add = num_of_aqueduct_building
}

disease_workshops_num_svalue = { #mill
	value = 0
	subtract = num_of_workshop_building
}

disease_port_num_svalue = {
	value = 0
	subtract = num_of_port_building
}

disease_mine_num_svalue = {
	value = 0
	subtract = num_of_slave_mine_building
}

disease_farm_num_svalue = {
	value = 0
	subtract = num_of_basic_settlement_infratructure_building
}

disease_market_num_svalue = {
	value = 0
	subtract = num_of_commerce_building
}

disease_barracks_num_svalue = {
	value = 0
	subtract = num_of_barracks_building
}

sanitation_terrain_svalue = {
	value = 0
	if = { # the desert is generally too hot and difficult for quite a few bacteria
		limit = {
			terrain = desert
		}
		add = 2
	}
	if = { # The jungle is full of disease
		limit = {
			terrain = jungle
		}
		add = -2
	}
	if = { # The jungle is full of disease
		limit = {
			terrain = marsh
		}
		add = -1
	}
	else = {
		add = 0
	}
}

sanitation_svalue = {
	### Province Scope; the idea is to have a dynamic value whether a disease breaking out is possible or not
	### Add whatever parameters you want to have an impact
	### Adapt tooltip that is displayed in GUI when changed (sanitation_value_tooltip)

	add = pops_sanitation_impact_svalue

	add = pops_food_consumption_disease_svalue # Well-fed --> better immune system; can go negative, indicating the opposite

	# Sanitary Buildings
	add = num_of_aqueduct_building # reassess in case of dissociation with housing function

	# The following are "unsanitary" buildings
	subtract = num_of_workshop_building
	subtract = num_of_port_building
	subtract = num_of_basic_settlement_infratructure_building
	subtract = num_of_slave_mine_building
	subtract = disease_market_num_svalue
	subtract = disease_barracks_num_svalue

	add = sanitation_terrain_svalue
}

## Since variables can't be set in the pop scope. Keep here in case of a miracle

# diseased_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			OR = {
# 				has_variable = plague_var
# 				has_variable = anthrax_var
# 				has_variable = tularemia_var
# 				has_variable = typhus_var
# 				has_variable = cholera_var
# 				has_variable = leprosy_var
# 				has_variable = smallpox_var
# 				has_variable = tuberculosis_var
# 				has_variable = influenza_var
# 				has_variable = polio_var
# 				has_variable = measles_var
# 				has_variable = malaria_var
# 				has_variable = dysentery_var
# 				has_variable = diphteria_var
# 				# not deadly
# 				has_variable = mentagra_var
# 				has_variable = trachoma_var # makes blind instead
# 				has_variable = cold_var
# 			}
# 		}
# 		add = 1
# 	}
# }

# plague_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = plague_var	
# 		}
# 		add = 1
# 	}
# }

# anthrax_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = anthrax_var
# 		}
# 		add = 1
# 	}
# }

# tularemia_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = tularemia_var
# 		}
# 		add = 1
# 	}
# }

# typhus_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = typhus_var
# 		}
# 		add = 1
# 	}
# }

# cholera_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = cholera_var
# 		}
# 		add = 1
# 	}
# }

# leprosy_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = leprosy_var
# 		}
# 		add = 1
# 	}
# }

# smallpox_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = smallpox_var
# 		}
# 		add = 1
# 	}
# }

# tuberculosis_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = tuberculosis_var
# 		}
# 		add = 1
# 	}
# }

# flu_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = influenza_var
# 		}
# 		add = 1
# 	}
# }

# polio_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = polio_var
# 		}
# 		add = 1
# 	}
# }


# measles_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = measles_var
# 		}
# 		add = 1
# 	}
# }

# malaria_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = malaria_var
# 		}
# 		add = 1
# 	}
# }

# dysentery_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = dysentery_var
# 		}
# 		add = 1
# 	}
# }

# diphteria_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = diphteria_var
# 		}
# 		add = 1
# 	}
# }

# mentagra_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = mentagra_var
# 		}
# 		add = 1
# 	}
# }

# trachoma_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = trachoma_var
# 		}
# 		add = 1
# 	}
# }

# cold_pop_in_province_svalue = {
# 	every_pops_in_province = {
# 		limit = {
# 			has_variable = cold_var
# 		}
# 		add = 1
# 	}
# }